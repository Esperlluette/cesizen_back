security:
    password_hashers:
        App\Entity\AppUser:
            algorithm: auto
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: "auto"
            cost: 15

    providers:
        app_user_provider:
            entity:
                class: App\Entity\AppUser
                property: username # laisse "username" si ton identifiant est bien ce champ

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            stateless: true
            user_checker: App\Security\AppUserChecker # << ajouté
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~ # Lexik JWT authenticator

    access_control:
        - { path: ^/api/login_check, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN } # admin protégé
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY } # reste de l'API
        - { path: ^/, roles: PUBLIC_ACCESS, methods: [OPTIONS] } # preflight CORS

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
